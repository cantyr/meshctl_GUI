/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
// * and open the template in the editor.
 */
package meshgui;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JWindow;

/**
 *
 * @author ledvance
 */
public class Home extends javax.swing.JFrame {

    public enum javaEvent {
        NO_EVENT,
        NAME,
        UUID,
        END_OF_LIST
    }

    /**
     * * JNI Configure methods **
     */
    public static native void init();

    public static native void security(int lvl);

    public static native void discoverUnprovisioned(int onoff);

    public static native void provision(String uuid);

    public static native void appKeyAdd(int keyIdx);

    public static native void appKeyBind(int elemIdx, int keyIdx, int modelId);

    public static native void removeNode(String device);

    public static native void endMainloop();

    /**
     * * JNI Control methods **
     */
    public static native void onoff(int onoff);

    public static native void hsl(int hue, int sat, int lightness);

    public static native void ctl(int cct, int lightness);

    public static native void lightness(int lightness);

    public static native void level(int level);
    
    public DiscoverUnprovisionedWindow window;

    /**
     * * C Callback Stuff **
     */
    public native void eventCallback();

    /**
     ** GUI STUFF **
     */
    public ArrayList<String> provisionedDevices = new ArrayList<>();
    public ArrayList<String> unprovisionedDevicesArrayList = new ArrayList<>();
    public DefaultListModel<String> deviceListModel;
    public DefaultListModel<String> groupsListModel;
    public DefaultListModel<String> groupsDeviceListModel;
    public javax.swing.JList unprovisionedDevicesList;
    ImageIcon colorWheel = new ImageIcon("colorwheel_only.png");
    ImageIcon cctWheel = new ImageIcon();
    public String deviceNameCallback;

    static {
        try {
            //System.loadLibrary("jni_setup");
            System.loadLibrary("mesh_lib");
        } catch (UnsatisfiedLinkError e) {
            System.out.println(
                    "Could not load native code :( " + e.getMessage());
            System.exit(1);
        }
    }

    /**
     * Creates new form GUI
     */
    public Home() {
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                endMainloop();
                System.out.println("Closed");
                e.getWindow().dispose();
            }
        });
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        
        unprovisionedDevicesListModel = new DefaultListModel();
        unprovisionedDevicesList = new javax.swing.JList();
        unprovisionedDevicesScrollPane = new javax.swing.JScrollPane();
        unprovisionedDevicesList.setModel(unprovisionedDevicesListModel);
        unprovisionedDevicesScrollPane.setViewportView(unprovisionedDevicesList);
        window = new DiscoverUnprovisionedWindow(this);

        bluetoothMeshLabel = new javax.swing.JLabel();
        scanDevicesBtn = new javax.swing.JButton();
        provisionedDevicesLabel = new javax.swing.JLabel();
        provisionedDevicesScrollPane = new javax.swing.JScrollPane();
        provisionedDevicesList = new javax.swing.JList<>();
        groupsBtn = new javax.swing.JButton();

        deviceListModel = new DefaultListModel<>();
        groupsListModel = new DefaultListModel<>();
        groupsDeviceListModel = new DefaultListModel<>();

        bluetoothMeshLabel.setText("LEDVANCE Bluetooth Mesh");

        scanDevicesBtn.setText("Scan for Devices");
        scanDevicesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanDevicesBtnMouseClicked(evt);
            }
        });
        provisionedDevicesLabel.setText("Provisioned Devices");

        provisionedDevicesList.setModel(deviceListModel
        /*new javax.swing.AbstractListModel<String>() {
                //provisionedDevices = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5"};
                public int getSize() { return provisionedDevices.size(); }
                public String getElementAt(int i) { return provisionedDevices.get(i); }
                public ArrayList updateList( String device ) { provisionedDevices.add( device ); return provisionedDevices; }
            }*/);
        provisionedDevicesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                provisionedDevicesListMouseClicked(evt);
            }
        });
        
        provisionedDevicesScrollPane.setViewportView(provisionedDevicesList);

        groupsBtn.setText("Groups");
        groupsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groupsBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(bluetoothMeshLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(provisionedDevicesLabel)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(provisionedDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(28, 28, 28)
                                                .addComponent(groupsBtn)))
                                .addContainerGap(110, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scanDevicesBtn)
                                .addGap(221, 221, 221))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(bluetoothMeshLabel)
                                .addGap(12, 12, 12)
                                .addComponent(scanDevicesBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(provisionedDevicesLabel)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(provisionedDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(groupsBtn)))
                                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void provisionedDevicesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_provisionedDevicesListMouseClicked

        String device = provisionedDevicesList.getSelectedValue();
        new DeviceControl(device).setVisible(true);
    }//GEN-LAST:event_provisionedDevicesListMouseClicked

    public void scanDevicesBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanDevicesBtnMouseClicked
        window.setVisible(true);
        home.discoverUnprovisioned(1);
        
    }//GEN-LAST:event_scanDevicesBtnMouseClicked

    public void discoverUnprovisionedCallback(int key, String str) {
        System.out.println("callback: " + key + ", " + str + "\n");
        

        switch ( javaEvent.values()[key] )
        {
            case NAME:
                deviceNameCallback = str;
                //Do Device class stuff here
//                Device device = new Device( "uuid", deviceName );
//                System.out.println( "Created Device with name: " + device.getName() + " and uuid: " + device.getUUID() );
//                window.getUnprovisionedListModel().addElement(device.getDetails());
                break;
            case UUID:
                Device device = new Device( str, deviceNameCallback );
                System.out.println( "Created Device with name: " + device.getName() + " and uuid: " + device.getUUID() );
                window.getUnprovisionedListModel().addElement(device.getDetails());
                //Do Device class stuff here
                break;
            default:
                break;
        }
        
    }

    public static void callback_static() {
        System.out.println("static callback");
    }

    private static void populateList(javax.swing.JList<String> list, String val) {
        DefaultListModel model = (DefaultListModel) list.getModel();
        model.removeAllElements();
        model.addElement(val);
    }

    private void groupsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupsBtnMouseClicked
        new GroupsWindow(this).setVisible(true);
    }//GEN-LAST:event_groupsBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    
    public static Home home;
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        home = new Home();
        home.setVisible(true);
        /*ThreadRunnable callbackRunnable = new ThreadRunnable(home);
        new Thread(callbackRunnable).start();*/
        ThreadSocket server = new ThreadSocket();
        new Thread(server).start();
        InitThreadRunnable initRunnable = new InitThreadRunnable(home);
        new Thread(initRunnable).start();
        home.security(0);
        System.out.println("All the threads are started");
    }

    class DiscoverUnprovisionedWindow extends javax.swing.JWindow {
        
        public DiscoverUnprovisionedWindow(JFrame parent) {
            super(parent);
            unprovisionedDevicesLabel = new javax.swing.JLabel();
            cancelBtn = new javax.swing.JButton();
            System.out.println("ListModel in DiscoverUnprovisionedWindow: " + unprovisionedDevicesListModel.toString());
            unprovisionedDevicesList.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    String device = unprovisionedDevicesList.getSelectedValue().toString();
                    device = device.substring(device.indexOf(": ") + 2, device.length());
                    deviceListModel.addElement(device);
                    home.provision(device);
                    /*home.appKeyAdd(1);
                    home.appKeyBind(0, 1, 1000);
                    home.appKeyBind(0, 1, 1301);
                    home.appKeyBind(0, 1, 1304);
                    home.appKeyBind(0, 1, 1307);
                    home.appKeyBind(0, 1, 1308);*/
                    dispose();
                }
            });

            cancelBtn.setText("Cancel");
            cancelBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    
                    Home.discoverUnprovisioned(0);
                    dispose();
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(126, 126, 126)
                                    .addComponent(unprovisionedDevicesLabel)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(51, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(unprovisionedDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(50, 50, 50))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(cancelBtn)
                                                    .addGap(171, 171, 171))))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addComponent(unprovisionedDevicesLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(unprovisionedDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                    .addComponent(cancelBtn)
                                    .addContainerGap())
            );

            this.pack();
            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            this.setAlwaysOnTop(true);
            this.setLocationRelativeTo(parent);
        }

        public DefaultListModel getUnprovisionedListModel() {
            return unprovisionedDevicesListModel;
        } 
    }

    class GroupsWindow extends javax.swing.JWindow {

        public GroupsWindow(JFrame parent) {
            super(parent);
            groupsLabel = new javax.swing.JLabel();
            groupsScrollPane = new javax.swing.JScrollPane();
            groupsList = new javax.swing.JList<>();
            cancelBtnGroups = new javax.swing.JButton();
            addGroupBtn = new javax.swing.JButton();

            groupsLabel.setText("Groups");

            if (!groupsListModel.contains("All Lights")) {
                groupsListModel.addElement("All Lights");
            }
            groupsList.setModel(groupsListModel);
            groupsScrollPane.setViewportView(groupsList);

            cancelBtnGroups.setText("Cancel");
            cancelBtnGroups.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose();
                }
            });

            addGroupBtn.setText("+Group");
            addGroupBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    final JDialog dialog = new JDialog();
                    dialog.setLocationRelativeTo(parent);
                    dialog.setAlwaysOnTop(true);
                    String groupName = JOptionPane.showInputDialog(dialog, "Give your group a name",
                            "Group Name", JOptionPane.PLAIN_MESSAGE);
                    groupsListModel.addElement(groupName);
                }
            });

            groupsList.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    String group = groupsList.getSelectedValue();
                    new GroupControl(group).setVisible(true);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(182, 182, 182)
                                    .addComponent(groupsLabel)
                                    .addGap(0, 182, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(groupsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(50, 50, 50))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(cancelBtnGroups)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(addGroupBtn)
                                                    .addGap(132, 132, 132))))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addComponent(groupsLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(groupsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cancelBtnGroups)
                                            .addComponent(addGroupBtn))
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            this.pack();
            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            this.setAlwaysOnTop(true);
            this.setLocationRelativeTo(parent);
        }
    }

    class DeviceControl extends javax.swing.JFrame {

        public DeviceControl(String device) {
            controllingLabel = new javax.swing.JLabel();
            onoffBtn = new javax.swing.JToggleButton();
            colorDiamond = new javax.swing.JLabel();
            brightnessSlider = new javax.swing.JSlider();
            cctColorBtn = new javax.swing.JToggleButton();
            closeBtnDevices = new javax.swing.JButton();
            removeBtn = new javax.swing.JButton();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            controllingLabel.setText("Controlling " + device);

            onoffBtn.setText("ON");
            onoffBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    onOffBtnPress(onoffBtn);
                }
            });

            colorDiamond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meshgui/colorwheel_only.png"))); // NOI18N
            colorDiamond.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    colorDiamondDrag(evt);
                }
            });

            colorDiamond.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    colorDiamondClick(evt);
                }
            });

            brightnessSlider.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    brightnessSliderDrag(brightnessSlider);
                }
            });

            cctColorBtn.setText("CCT");
            cctColorBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
//                    if (cctColorBtn.isSelected()) {
//                        colorDiamond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meshgui/test.jpg")));
//                        cctColorBtn.setText("Color");
//                    } else {
//                        colorDiamond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meshgui/colorwheel_only.png")));
//                        cctColorBtn.setText("CCT");
//                    }
                }
            });

            closeBtnDevices.setText("Close");
            closeBtnDevices.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose();
                }
            });

            removeBtn.setText("Remove");
            removeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    new Home().removeNode(device);
                    dispose();
                }
            });

            /**
             * * LAYOUT **
             */
            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(69, 69, 69)
                                                                    .addComponent(colorDiamond))
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(175, 175, 175)
                                                                    .addComponent(cctColorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(119, 119, 119)
                                                                    .addComponent(brightnessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(layout.createSequentialGroup()
                                                                    .addGap(174, 174, 174)
                                                                    .addComponent(onoffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(0, 74, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addComponent(closeBtnDevices)))
                                    .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(controllingLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(removeBtn)
                                    .addGap(21, 21, 21))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(controllingLabel)
                                            .addComponent(removeBtn))
                                    .addGap(19, 19, 19)
                                    .addComponent(onoffBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(brightnessSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(colorDiamond)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cctColorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(closeBtnDevices)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            this.setAlwaysOnTop(true);
        }
    }

    class GroupControl extends javax.swing.JFrame {

        public GroupControl(String groupName) {
            controllingGroupsLabel = new javax.swing.JLabel();
            onoffBtnGroups = new javax.swing.JToggleButton();
            colorDiamondGroups = new javax.swing.JLabel();
            brightnessSliderGroups = new javax.swing.JSlider();
            cctColorBtnGroups = new javax.swing.JToggleButton();
            groupsDevicesScrollPane = new javax.swing.JScrollPane();
            groupsDeviceList = new javax.swing.JList<>();
            groupDevicesLabel = new javax.swing.JLabel();

            if (!groupName.equals("All Lights")) {
                addDeviceToGroupBtn = new javax.swing.JButton();
            }

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            controllingGroupsLabel.setText("Controlling Group " + groupName);

            onoffBtnGroups.setText("ON");
            onoffBtnGroups.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    onOffBtnPress(onoffBtnGroups);
                }
            });

            colorDiamondGroups.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meshgui/colorwheel_only.png"))); // NOI18N
            colorDiamondGroups.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    colorDiamondDrag(evt);
                }
            });

            colorDiamondGroups.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    colorDiamondClick(evt);
                }
            });

            brightnessSliderGroups.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    brightnessSliderDrag(brightnessSliderGroups);
                }
            });

            cctColorBtnGroups.setText("CCT");
            cctColorBtnGroups.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    //cctColorBtnGroupsMouseClicked(evt);
                }
            });

            try {
                addDeviceToGroupBtn.setText("+Devices");
                addDeviceToGroupBtn.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        new AddDeviceToGroupWindow(GroupControl.this).setVisible(true);
                    }
                });
            } catch (NullPointerException e) {
                //All Lights group
            }

            if (groupName.equals("All Lights")) {
                groupsDeviceList.setModel(getDeviceList());
                groupsDevicesScrollPane.setViewportView(groupsDeviceList);
            } else {
                groupsDeviceList.setModel(groupsDeviceListModel);
                groupsDevicesScrollPane.setViewportView(groupsDeviceList);
            }

            groupDevicesLabel.setText("Devices");

            if (!groupName.equals("All Lights")) {
                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(controllingGroupsLabel))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(130, 130, 130)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(colorDiamondGroups)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(50, 50, 50)
                                                                        .addComponent(brightnessSliderGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(105, 105, 105)
                                                                        .addComponent(onoffBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(106, 106, 106)
                                                                        .addComponent(cctColorBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(0, 165, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(261, 261, 261)
                                                        .addComponent(groupDevicesLabel))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(158, 158, 158)
                                                        .addComponent(groupsDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(255, 255, 255)
                                                        .addComponent(addDeviceToGroupBtn)))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(controllingGroupsLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(onoffBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(brightnessSliderGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(colorDiamondGroups)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cctColorBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addComponent(groupDevicesLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(groupsDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addDeviceToGroupBtn)
                                        .addGap(10, 10, 10))
                );
            } else {
                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(controllingGroupsLabel))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(130, 130, 130)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(colorDiamondGroups)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(50, 50, 50)
                                                                        .addComponent(brightnessSliderGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(105, 105, 105)
                                                                        .addComponent(onoffBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(106, 106, 106)
                                                                        .addComponent(cctColorBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(0, 165, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(261, 261, 261)
                                                        .addComponent(groupDevicesLabel))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGap(158, 158, 158)
                                                        .addComponent(groupsDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(controllingGroupsLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(onoffBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(brightnessSliderGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(colorDiamondGroups)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cctColorBtnGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                        .addComponent(groupDevicesLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(groupsDevicesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGap(10, 10, 10))
                );
            }

            pack();
            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            this.setAlwaysOnTop(true);
        }
    }

    class AddDeviceToGroupWindow extends javax.swing.JWindow {

        public AddDeviceToGroupWindow(JFrame parent) {
            super(parent);
            addDeviceLabel = new javax.swing.JLabel();
            cancelAddDeviceToGroupBtn = new javax.swing.JButton();
            provisionedDevicesListForGroups = new javax.swing.JList<>();
            provisionedDevicesScrollPaneForGroups = new javax.swing.JScrollPane();

            provisionedDevicesListForGroups.setModel(getDeviceList());
            provisionedDevicesScrollPaneForGroups = new javax.swing.JScrollPane();
            provisionedDevicesScrollPaneForGroups.setViewportView(provisionedDevicesListForGroups);

            addDeviceLabel.setText("Add a device");

            cancelAddDeviceToGroupBtn.setText("Cancel");
            cancelAddDeviceToGroupBtn.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    dispose();
                }
            }
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());

            getContentPane()
                    .setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(203, 203, 203)
                                    .addComponent(addDeviceLabel)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(116, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(provisionedDevicesScrollPaneForGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(113, 113, 113))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(cancelAddDeviceToGroupBtn)
                                                    .addGap(214, 214, 214))))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(62, Short.MAX_VALUE)
                                    .addComponent(addDeviceLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(provisionedDevicesScrollPaneForGroups, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cancelAddDeviceToGroupBtn)
                                    .addGap(39, 39, 39))
            );

            this.pack();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            this.setAlwaysOnTop(
                    true);

            this.setLocationRelativeTo(parent);
        }
    }

    private double getAngle(double xTouch, double yTouch) {
        int diamondWidth, diamondHeight;
        diamondWidth = colorWheel.getIconWidth();
        diamondHeight = colorWheel.getIconHeight();
        double x = xTouch - (diamondWidth / 2d);
        double y = diamondHeight - yTouch - (diamondHeight / 2d);
        return ((Math.toDegrees(Math.atan2(y, x))) + 360) % 360;
    }

    public void onOffBtnPress(javax.swing.JToggleButton btn) {
        if (btn.isSelected()) {
            home.onoff(0);
            btn.setText("ON");
        } else {
            home.onoff(1);
            btn.setText("OFF");
        }
    }

    public void cctColorBtnToggle() {
        /*if (btn.isSelected()) {
                        colorDiamond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meshgui/test.jpg")));
                        cctColorBtn.setText("Color");
                    } else {
                        colorDiamond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meshgui/colorwheel_only.png")));
                        cctColorBtn.setText("CCT");
                    }*/
    }

    public void colorDiamondDrag(java.awt.event.MouseEvent evt) {
        home.hsl((int) getAngle(evt.getX(), evt.getY()), 100, 50);
    }

    public void colorDiamondClick(java.awt.event.MouseEvent evt) {
        home.hsl((int) getAngle(evt.getX(), evt.getY()), 100, 50);
    }

    public void brightnessSliderDrag(javax.swing.JSlider slider) {
        home.lightness(slider.getValue());
    }

    public DefaultListModel<String> getDeviceList() {
        DefaultListModel<String> devicesListModel = new DefaultListModel<>();
        DefaultListModel devices = (DefaultListModel) provisionedDevicesList.getModel();
        for (int i = 0; i < devices.size(); i++) {
            devicesListModel.addElement((String) devices.getElementAt(i));
        }
        return devicesListModel;
    }

    public static int square(int input) {
        int output = input * input;
        return output;
    }

    public static int power(int input, int exponent) {
        int output, i;
        output = 1;
        for (i = 0; i < exponent; i++) {
            output *= input;
        }
        return output;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bluetoothMeshLabel;
    private javax.swing.JButton groupsBtn;
    private javax.swing.JLabel provisionedDevicesLabel;
    private javax.swing.JList<String> provisionedDevicesList;
    private javax.swing.JScrollPane provisionedDevicesScrollPane;
    private javax.swing.JButton scanDevicesBtn;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JLabel unprovisionedDevicesLabel;
    public DefaultListModel unprovisionedDevicesListModel;
    public javax.swing.JScrollPane unprovisionedDevicesScrollPane;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JSlider brightnessSlider;
    private javax.swing.JToggleButton cctColorBtn;
    private javax.swing.JLabel colorDiamond;
    private javax.swing.JLabel controllingLabel;
    private javax.swing.JToggleButton onoffBtn;
    private javax.swing.JButton closeBtnDevices;
    private javax.swing.JButton removeBtn;
    private javax.swing.JButton addGroupBtn;
    private javax.swing.JButton cancelBtnGroups;
    private javax.swing.JLabel groupsLabel;
    private javax.swing.JList<String> groupsList;
    private javax.swing.JScrollPane groupsScrollPane;
    private javax.swing.JButton addDeviceToGroupBtn;
    private javax.swing.JSlider brightnessSliderGroups;
    private javax.swing.JToggleButton cctColorBtnGroups;
    private javax.swing.JLabel colorDiamondGroups;
    private javax.swing.JLabel controllingGroupsLabel;
    private javax.swing.JLabel groupDevicesLabel;
    private javax.swing.JList<String> groupsDeviceList;
    private javax.swing.JScrollPane groupsDevicesScrollPane;
    private javax.swing.JToggleButton onoffBtnGroups;
    private javax.swing.JLabel addDeviceLabel;
    private javax.swing.JButton cancelAddDeviceToGroupBtn;
    private javax.swing.JList<String> provisionedDevicesListForGroups;
    private javax.swing.JScrollPane provisionedDevicesScrollPaneForGroups;
}
